#!/bin/sh

mkdir -p build ; cp -R choices build/
rm -r choices

proj_dir=`pwd`
readmeext={{readmeext}}{{^readmeext}}.rst{{/readmeext}}
license={{license}}{{^license}}Apache-2.0{{/license}}
buildtool={{buildtool}}{{^buildtool}}rake{{/buildtool}}
testfrwk={{testfrwk}}{{^testfrwk}}rspec{{/testfrwk}}
executable={{executable}}{{^executable}}no{{/executable}}
ffilib={{ffilib}}{{^ffilib}}none{{/ffilib}}

nesteddirs={{nesteddirs}}{{^nesteddirs}}introrb/util{{/nesteddirs}}
project={{project}}{{^project}}util{{/project}}

cp build/choices/readme/README${readmeext} README${readmeext}
if [ -d build/choices/_parent_readme ] ; then
    cp build/choices/_parent_readme/README${readmeext} \
	    build/choices/_parent_init/README${readmeext} ;
fi

if [ ! 'Not open source' = "${license}" ] ; then
    cp build/choices/license/LICENSE_${license} LICENSE ;
fi

if [ -d build/choices/build_tool ] && [ ! 'make' = "${buildtool}" ] ; then
	cp -R build/choices/build_tool/${buildtool}/* . ;
elif [ -d build/choices/build_tool ] ; then # default: rake
	cp -R build/choices/build_tool/rake/* . ;
fi

if [ -d build/choices/testfrwk ] && [ ! "rspec" = "${testfrwk}" ] ; then
	cp -R build/choices/testfrwk/${testfrwk}/* . ;
elif [ -d build/choices/testfrwk ] ; then # default: rspec
	cp -R build/choices/testfrwk/rspec/* . ;
fi

if [ -d bin ] && [ ! "yes" = "${executable}" ] ; then
    rm bin/{{parent}}{{^parent}}introrb{{/parent}}_${project} lib/${nesteddirs}/cli.rb lib/${nesteddirs}/app.rb ;
fi

if [ -d build/choices/ffi_lib ] && [ '' = "$(echo "${ffilib}" | grep -E 'none')" ] ; then
	if [ "swig" = "${ffilib}" ] ; then
		mkdir -p ext ;
		cp -R build/choices/ffi_lib/${ffilib}/* ext/ ;
    else
    	cp -R build/choices/ffi_lib/${ffilib}/* lib/${nesteddirs}/ ;
    fi
fi

if [ -d '../_templates' ] ; then
	skeletondir={{skeletondir}}{{^skeletondir}}$HOME/Templates/mustache/skeleton-rb{{/skeletondir}} ;
	skel_pardir=`dirname ${skeletondir}` ;
	rm -fr ../_templates/mustache/`basename ${skeletondir}` ;
	mkdir -p ../_templates/mustache ;
	cp -R ${skel_pardir}/render_mustache.* ${skeletondir} ../_templates/mustache/ ;
fi
