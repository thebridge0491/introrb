require 'ffi'

module {{parentcap}}{{^parentcap}}Introrb{{/parentcap}}; end
module {{parentcap}}{{^parentcap}}Introrb{{/parentcap}}{{joiner}}{{^joiner}}::{{/joiner}}{{projectcap}}{{^projectcap}}Util{{/projectcap}}; end

module {{parentcap}}{{^parentcap}}Introrb{{/parentcap}}{{joiner}}{{^joiner}}::{{/joiner}}{{projectcap}}{{^projectcap}}Util{{/projectcap}}::Classic
  extend FFI::Library
  ffi_lib 'intro_c-practice'
  
  # attach_function [:ruby_name, ]:c_name, [ :params ], :returns
  attach_function :fact_lp, :fact_lp, [:int], :int
  attach_function :fact_i, [:int], :int
  
  attach_function :expt_lp, [:float, :float], :float
  attach_function :expt_i, [:float, :float], :float
  
  extend self
  
  def lib_main(args = [])
    puts "fact(5): #{fact_i(5)}"
    0
  end
end


if __FILE__ == $PROGRAM_NAME
  {{parentcap}}{{^parentcap}}Introrb{{/parentcap}}{{joiner}}{{^joiner}}::{{/joiner}}{{projectcap}}{{^projectcap}}Util{{/projectcap}}::Classic.lib_main(ARGV)
  exit 0
end
