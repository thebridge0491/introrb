module <%=config[:parentcap]%>; end

module <%=config[:parentcap]%><%=config[:joiner]%><%=config[:projectcap]%>
  extend self
  
  def in_epsilon(a, b, tolerance = 0.001)
    delta = tolerance.abs
    # (a - delta) <= b && (a + delta) >= b
    !((a + delta) < b) && !((b + delta) < a)
  end
  
  def cartesian_prod(arr1, arr2)
    # arr1.product(arr2).select{|e| true}
    arr1.flat_map{|x| arr2.map{|y| [x, y]}}.select{|e| true}
  end
  
  def lib_main(args = [])
    arr1, arr2 = [0, 1, 2], [10, 20, 30]
    puts "cartesian_prod(#{arr1}, #{arr2}): #{cartesian_prod(arr1, arr2)}"
    0
  end
end


if __FILE__ == $PROGRAM_NAME
  <%=config[:parentcap]%><%=config[:joiner]%><%=config[:projectcap]%>.lib_main(ARGV)
  exit 0
end
